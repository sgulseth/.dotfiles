#
# .zshrc is sourced in interactive shells.
# It should contain commands to set up aliases,
# functions, options, key bindings, etc.
#

autoload -U compinit
compinit

#allow tab completion in the middle of a word
setopt COMPLETE_IN_WORD

# Allow moving into directories without cd
setopt AUTO_CD

# Remove command lines from the history list when the first character on the line is a space, or when one of the expanded aliases contains a leading space
setopt histignorespace

# oh-my-zsh plugins
plugins=(git ssh-agent docker kubectl)

source ~/.antigen/antigen.zsh

# Load the oh-my-zsh's library.
antigen use oh-my-zsh

# Bundles from the default repo (robbyrussell's oh-my-zsh).
antigen bundle git
antigen bundle pip
#antigen bundle lein
antigen bundle command-not-found
antigen bundle thewtex/tmux-mem-cpu-load
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle clvv/fasd

# Syntax highlighting bundle.
antigen bundle zsh-users/zsh-syntax-highlighting

# Load the theme.
#antigen theme afowler

antigen theme sgulseth/.dotfiles zsh/themes/sindre

# Tell antigen that you're done.
antigen apply


# Exports
export EDITOR="/usr/local/bin/nvim"
export HISTSIZE=1000000000
export HISTFILESIZE=1000000000
export PATH=$PATH:/usr/local/bin:$HOME/.dotfiles/bin
export GOPROXY=https://proxy.golang.org
export HOMEBREW_NO_AUTO_UPDATE=1

# kube-ps1
#KUBE_PS1_SYMBOL_DEFAULT='' \
#    KUBE_PS1_PREFIX="%{${fg[blue]}%}k8s%{$reset_color%}" \
#    KUBE_PS1_SUFFIX='' \
#    KUBE_PS1_SEPARATOR='' \
#    RPROMPT='$(kube_ps1) [%D{%L:%M:%S}]'
#source ~/.dotfiles/zsh/kube-ps1/kube-ps1.sh


# Aliases
source ~/.dotfiles/zsh/kubectl-aliases/.kubectl_aliases

alias kdiff="kitty +kitten diff"
alias gl="git log --oneline --graph"
alias gd="git diff -- ':!package-lock.json' ':!yarn.lock'"
alias git-root='cd $(git rev-parse --show-toplevel)'

git-branch-cleanup() {
    git branch --merged | grep -v "\*" | grep -v master | grep -v dev | grep -v staging | grep -v main | xargs -n 1 git branch -d
}
certinfo() {
    echo | openssl s_client -showcerts -servername $1 -connect $1:443 2>/dev/null | openssl x509 -inform pem -noout -text
}

rotate-mac-address() {
    sudo ifconfig en0 ether `openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//'`
}

ssh-until() {
    until ssh $@; do sleep 1; done;
}

gen-pass() {
    LENGTH=${1:-20}
    LC_ALL=C; LC_CTYPE=C; cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w $LENGTH | head -n 1
}

hess() {
    http --pretty=all --print=hb "$@" | less -R;
}

b64e() {
  VAL=$(echo -n $@ | base64)
  if [[ "$OSTYPE" == "darwin"* ]]; then
    echo $VAL | pbcopy
  fi

  echo $VAL
}

b64d() {
  VAL=$(echo -n $@ | base64 --decode)
  if [[ "$OSTYPE" == "darwin"* ]]; then
    echo $VAL | pbcopy
  fi

  echo $VAL
}

if command -v exa > /dev/null; then
    alias ls="exa --long --header --extended --git"
else
    alias ls="ls -GF"
fi

[ -f ~/.zshrc-local ] && . ~/.zshrc-local

if command -v ccat > /dev/null; then
    alias cat=$(command -v ccat)
fi

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

kebug() {
  kubectl -n default run --generator=run-pod/v1 \
    sindre-tmp-shell \
    --rm \
    -i \
    --tty \
    --image sgulseth/kebug -- /bin/bash
}

k-pod-ips () {
    kubectl get -o=jsonpath='{range .items[*]}{.status.podIP}{"	"}{.metadata.name}{"\n"}{end}' pods $@
}

alias d="kitty +kitten diff"

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$HOME/.cargo/bin:$PATH"


lg() {
    export LAZYGIT_NEW_DIR_FILE=~/.lazygit/newdir

    lazygit "$@"

    if [ -f $LAZYGIT_NEW_DIR_FILE ]; then
            cd "$(cat $LAZYGIT_NEW_DIR_FILE)"
            rm -f $LAZYGIT_NEW_DIR_FILE > /dev/null
    fi
}

export XDG_CONFIG_HOME=$HOME/.config



# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"
export VOLTA_HOME="$HOME/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"

# bun completions
[ -s "/Users/sgulseth/.bun/_bun" ] && source "/Users/sgulseth/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

[[ -s "/Users/sgulseth/.gvm/scripts/gvm" ]] && source "/Users/sgulseth/.gvm/scripts/gvm"

# to make watch work with alises, *shrug* https://unix.stackexchange.com/questions/25327/watch-command-alias-expansion
alias watch='watch '
